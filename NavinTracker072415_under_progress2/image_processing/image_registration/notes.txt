for aligning fluor stacks 
    cherry standard - ttx3 (AIY), srh-142 (ADF), tdc1 (RIM, RIC), glr3 (RIA), str3 (ASI), odr7 (AWA), dat1 (CEP, ADE), flp17 (BAG) :his44:mCherry
    focus on pharynx lumen. 25 slices? 50 slices?
    get 3D matrix of mCherry channel for standard and test
    adjust test to maximize correlation between standard and test   imresize  imrotate imregister rigid3D
    Do imregister w/ test candidate center slice w/ target center slice
        get goodness of fit over all slices
        repeat w/ next test canidate center slice (+/- 2 or 3 slices)
        degrees of freedom: X-translation, Y-translation, Z-translation, 
        initial X-Y guess - manually draw line from nose tip to grinder, and also isthmus boundries perpendicular to AP axis
            rotate and scale target to fix (analytic solution?)
            translate to intersection, rotate/scale - analytic
        w/ optimizer, fine-tune to align centers of mass of fluor cells - detect by threshold (histogram-based), bwconncomp, regionprops Centroid
        then, the actual volumes
For standard, manually assign each nucleus X-Y-Z a name based on h20:GFP/normarski
        stack image, click get x-y, input name
        find GFP blobs, assign code number
        once labelled , assign all pixels of that blob that name; click on pixel, get name
        slider for z-stack


m2html('mfiles','WormMovieAnalysis', 'htmldir','doc', 'recursive','on', 'global','on', 'save','on');


bargraph max, min, mean for each stimulation, and each inter-stimulus period
    pre-stim = -50 sec
    post-stim = +50 sec - variable 50sec w/ defaults
Histogram for attibute for any given period - use segment_analysis function

reversal length avg per frame, avg per sec
	revlength numframes long
	length in between boundries in Reversals, inclusive

speed/bodylength 

Tracks(10).Reversals(:,1) = start frame of reversals
Tracks(10).Reversals(:,2) = end frame of reversals
Tracks(10).Reversals(:,2) = rev length 

save processed tracks in a more compressed, elegant data structure
	per-frame and freqs hierarchy - makes segment_analysis, binning functions more elegant and cleaner - more flexible

Have rasterplot link to trajectory figure of that trace 
	also plot speed, ecc, angular speed, state

dynamic, optimal binsize - different for light vs dark segments


For Ben:
Put the track linker in Tracker.m (deal w/ the appending, stuff, etc). 
store upper left corner coordinate of the bounding box with the bitmap
store the dimensions of the frame (512x512 or 1024x1024)
    make some 1024x1024 movies. Also osm9;ocr2, N2
framerate 1, 3, 10, 30
Link up joined tracks into a Tracks array and save
Send ben a track file stat!


Scoring: ignore frames that user and machine score as forward
         rmsd locomotion state
        ignore ring --- optimize afterwards

k=1; for(i=1:length(t1(k).Image)) if(~isnan(t1(k).Eccentricity(i))) imshow(~full(t1(k).Image{i})); end; pause; end

x=[]; y=[]; x1=[]; y1=[]; for(i=1:length(Tracks)) x = cat(1,x, Tracks(i).Path(:,1)); y = cat(1,y, Tracks(i).Path(:,2)); x1=[x1  Tracks(i).bound_box_ul_x]; y1=[y1  Tracks(i).bound_box_ul_y]; end

k=1; plot(t1(k).Path(:,1),t1(k).Path(:,2)); axis([0 512 0 512])

launching child processes:  
system('C:\"Program Files"\MATLAB71\bin\win32\MATLAB.exe -nosplash -r pwd & ')
OR .... have a cron job that runs an ash script every few seconds
	in the ash script:
	check a "job" directory
	if a job file is there mv to working, then run it:
	/cygdrive/c/MATLAB/blah.exe 'navin; jobfile.working'
	After completion, mv jobfile.working jobfile.done
	  
filename/path ":" issues

Centering mightex light - height 
    put paper with dot at 256,256
    center the light disk on the paper, NOT the screen
    measure with the pointer at 256,256 in the center of the sensor

    blue    Db    green     Dg
-1  4.01    38.5  0.95      43.5
0   2.95    41    0.88      46     
I   1.90    46    0.94      48.5
II  1.69    50    0.765     51.5
III  


to do:
TrackerAutomatedScript:
	if(not(large plate))
		with warning to wait
		ring all the movies
		manual the missing movie rings 
	if((large plate))
		with warning to wait
		look for circle - function
		manual the circle if not found - function
If Tracker
	if(not(large plate))
		find ring
		load ring
		calc ring
	if no ring, 
		look for circle
		manual the circle if not found

overlay line plot pre, during, post stimulus
if empty(stimulus) then  
speed dist
ecc dist
pir delta-theta dist
rev delta-theta dist
revlength dist
revspeed dist
omegaTurn delta-theta dist
omegaTurn ecc dist

fraction state into one plot a la dirk
bar(BinData.time, [BinData.(frac_fieldnames{2})' BinData.(frac_fieldnames{3})' BinData.(frac_fieldnames{5})' BinData.(frac_fieldnames{6})' BinData.(frac_fieldnames{14})'],'stacked')
not sure how useful this is

function like ls_rm to add num_movies to all the bindatas
    load structure into memory
    if targetfieldname not present, add it w/ default value
    save 

polar plots 

fit plot
    also initial guesses
    do deltas as well automatically
fit compares
    absolutes and deltas
    stats - F-test
    same number of wt movies as most numerous mutant of interest
        pick from same dates, plus random others to fill out 

fit individual movies - don't bother w/ error stats
weighted average parameters (by mean number of animals)
overlay onto mean psth data

overlay figure legend function spillover problems

for strain-to-strain comparisons - initial guesses better?

overlay_fits(strainlist, colors, path, prefix)
bargraph_fitting_struct(fitting_struct_array, title_string, strainnames, inputcolors, diff_flag, initial_flag)
dat_chop/scr

quad plate - done

make my own aviinfo wrapper merging mmreader, etc - done

finish function [timeseries_matrix, t, row_labels] = BinData_array_to_matrix(input_BinData_array, fieldnames, start_time, end_time)
finish outBinData_array = extract_BinData_array(inputBinData_array, start_time, end_time)
    timeshift to minimize differences in time - use the  longest inputBinData_array, and align others to it

