function y = nansum(x,dim)%NANSUM Sum ignoring NaNs.%   NANSUM(X) returns the sum treating NaNs as missing values.  %   For vectors, NANSUM(X) is the sum of the non-NaN elements in%   X. For matrices, NANSUM(X) is a row vector containing the sum %   of the non-NaN elements in each column of X. %%    See also NANMEDIAN, NANSTD, NANMIN, NANMAX, NANMEAN.% Replace NaNs with zeros.nans = isnan(x);i = find(nans);x(i) = zeros(size(i));% Protect against an entire column of NaNsif nargin == 1    y = sum(x);    i = find(all(nans));    y(i) = i + NaN;else    y = sum(x,dim);end% function y = nansum(x,dim)% %NANSUM Sum, ignoring NaNs.% %   Y = NANSUM(X) returns the sum of X, treating NaNs as missing values.% %   For vector input, Y is the sum of the non-NaN elements in X.  For% %   matrix input, Y is a row vector containing the sum of non-NaN elements% %   in each column.  For N-D arrays, NANSUM operates along the first% %   non-singleton dimension.% %% %   Y = NANSUM(X,DIM) takes the sum along dimension DIM of X.% %% %   See also SUM, NANMEAN, NANVAR, NANSTD, NANMIN, NANMAX, NANMEDIAN.% % %   Copyright 1993-2004 The MathWorks, Inc.% %   $Revision: 2.10.2.4 $  $Date: 2004/07/28 04:38:44 $% % % Find NaNs and set them to zero.  Then sum up non-NaNs.  Cols of all NaNs% % will return zero.% % nans = isnan(x);% i = find(nans);% x(i) = zeros(size(i));% % x(isnan(x)) = 0;% if nargin == 1 % let sum figure out which dimension to work along%     y = sum(x);% else           % work along the explicitly given dimension%     y = sum(x,dim);% end