function y = nanstd(varargin)%NANSTD Standard deviation, ignoring NaNs.%   Y = NANSTD(X) returns the sample standard deviation of the values in X,%   treating NaNs as missing values.  For a vector input, Y is the standard%   deviation of the non-NaN elements of X.  For a matrix input, Y is a row%   vector containing the standard deviation of the non-NaN elements in%   each column of X. For N-D arrays, NANSTD operates along the first%   non-singleton dimension of X.%%   NANSTD normalizes Y by (N-1), where N is the sample size.  This is the%   square root of an unbiased estimator of the variance of the population%   from which X is drawn, as long as X consists of independent, identically%   distributed samples and data are missing at random.%%   Y = NANSTD(X,1) normalizes by N and produces the square root of the%   second moment of the sample about its mean.  NANSTD(X,0) is the same as%   NANSTD(X).%%   Y = NANSTD(X,FLAG,DIM) takes the standard deviation along dimension%   DIM of X.%%   See also STD, NANVAR, NANMEAN, NANMEDIAN, NANMIN, NANMAX, NANSUM.%   Copyright 1993-2006 The MathWorks, Inc.%   $Revision: 2.10.2.6 $  $Date: 2006/10/02 16:34:51 $% Call nanvar(x,flag,dim) with as many inputs as neededy = sqrt(nanvar(varargin{:}));% function y = nanstd(x)% %NANSTD Standard deviation ignoring NaNs.% %   NANSTD(X) returns the same standard deviation treating NaNs % %   as missing values.% %% %   For vectors, NANSTD(X) is the standard deviation of the% %   non-NaN elements in X.  For matrices, NANSTD(X) is a row% %   vector containing the standard deviation of each column,% %   ignoring NaNs.% %% %   See also NANMEAN, NANMEDIAN, NANMIN, NANMAX, NANSUM.% % if isempty(x) % Check for empty input.%     y = NaN;%     return% end% % nans = isnan(x);% i = find(nans);% % % Find mean% avg = nanmean(x);% % if min(size(x))==1,%    count = length(x)-sum(nans);%    x = x - avg;% else%    count = size(x,1)-sum(nans);%    x = x - avg(ones(size(x,1),1),:);% end% % % Replace NaNs with zeros.% x(i) = zeros(size(i));% % % Protect against a column of all NaNs% i = find(count==0);% count(i) = ones(size(i));% y = sqrt(sum(x.*x)./max(count-1,1));% y(i) = i + NaN;% 