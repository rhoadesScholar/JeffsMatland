function m = nanmean(x,dim)%NANMEAN Mean value, ignoring NaNs.%   M = NANMEAN(X) returns the sample mean of X, treating NaNs as missing%   values.  For vector input, M is the mean value of the non-NaN elements%   in X.  For matrix input, M is a row vector containing the mean value of%   non-NaN elements in each column.  For N-D arrays, NANMEAN operates%   along the first non-singleton dimension.%%   NANMEAN(X,DIM) takes the mean along dimension DIM of X.%%   See also MEAN, NANMEDIAN, NANSTD, NANVAR, NANMIN, NANMAX, NANSUM.%   Copyright 1993-2004 The MathWorks, Inc.%   $Revision: 2.13.4.3 $  $Date: 2004/07/28 04:38:41 $% Find NaNs and set them to zeronans = isnan(x);x(nans) = 0;if nargin == 1 % let sum deal with figuring out which dimension to use    % Count up non-NaNs.    n = sum(~nans);    n(n==0) = NaN; % prevent divideByZero warnings    % Sum up non-NaNs, and divide by the number of non-NaNs.    m = sum(x) ./ n;else    % Count up non-NaNs.    n = sum(~nans,dim);    n(n==0) = NaN; % prevent divideByZero warnings    % Sum up non-NaNs, and divide by the number of non-NaNs.    m = sum(x,dim) ./ n;end% function y = nanmean(x);% %NANMEAN Average or mean ignoring NaNs.% %   NANMEAN(X) returns the average treating NaNs as missing values.  % %   For vectors, NANMEAN(X) is the mean value of the non-NaN% %   elements in X.  For matrices, NANMEAN(X) is a row vector% %   containing the mean value of each column, ignoring NaNs.% %% %   See also NANMEDIAN, NANSTD, NANMIN, NANMAX, NANSUM.% % if isempty(x) % Check for empty input.%     y = NaN;%     return% end% % % Replace NaNs with zeros.% nans = isnan(x);% i = find(nans);% x(i) = zeros(size(i));% % if min(size(x))==1,%   count = length(x)-sum(nans);% else%   count = size(x,1)-sum(nans);% end% % % Protect against a column of all NaNs% i = find(count==0);% count(i) = ones(size(i));% y = sum(x)./count;% y(i) = i + NaN;% 